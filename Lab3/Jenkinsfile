pipeline {
    options { timestamps() }

    agent none
    stages {
        stage('Check scm') {
            agent any
            steps {
                checkout scm
            }
        }
        stage('Build'){
            steps {
                echo "Building ...${BUILD_NUMBER}"
                echo "Build completed"
            }
        }
        stage('Test') {
            agent { docker { image 'alpine'
                    args '-u=\"root\"'
                    }
                  }
            steps {
                sh 'apk add --update python3 py-pip'
                sh 'pip install Flask'
                sh 'pip install xmlrunner'
                sh 'python3 Lab3/test.py'
            } 
            post {
                always {
                    junit 'test-reports/*.xml'
                }   
                success {
                    echo "Application testing successfully completed "
                }
                failure {
                    echo "Ooooppss!!! Tests failed!"
                }
            }     
        }
        stage ('Docker') {
             agent any
             steps {
                script {               
                    sh "docker build -t haktoid/app.py -f Lab3/Dockerfile ."  
                    withCredentials([string(credentialsId: 'DockJenk', variable: 'DOCKERHUB_CREDENTIALS_PSW')]) {
                        sh 'echo \$DOCKERHUB_CREDENTIALS_PSW | docker login -u \$DOCKERHUB_CREDENTIALS_USR --password-stdin'
                    }                                  
                    sh "docker push haktoid/app.py"
                }
            }
        }
    }
}